/* You can add global styles to this file, and also import other style files */
@import "@angular/material/prebuilt-themes/indigo-pink.css";
@import "~ngx-toastr/toastr";
@import "../node_modules/bootstrap/scss/functions";

@import "~@angular/material/theming";
@function mat-color($palette, $hue: default, $opacity: null) {
  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {
    @return mat-color($palette, default, $hue);
  }

  $color: map-get($palette, $hue);

  @if (type-of($color) != color) {
    @if ($opacity == null) {
      @return $color;
    }

    // Here is the change from the original function:
    // If the $color resolved to something different from a color, we assume it is a CSS variable
    // in the form of rgba(rgba(var(--rgba-css-var), a) and replace the 'a' value.
    @return #{str-slice($color, 0, str-index($color, ",")) + $opacity + ")"};
  }

  @return rgba($color, if($opacity == null, opacity($color),  $opacity));
}
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

@include mat-core();
$md-ekhaa: (
  50: rgba(var(--primary50-parts), 1),
  100: rgba(var(--primary100-parts), 1),
  200: rgba(var(--primary200-parts), 1),
  300: rgba(var(--primary300-parts), 1),
  400: rgba(var(--primary400-parts), 1),
  500: rgba(var(--primary500-parts), 1),
  600: rgba(var(--primary600-parts), 1),
  700: rgba(var(--primary700-parts), 1),
  800: rgba(var(--primary800-parts), 1),
  900: rgba(var(--primary900-parts), 1),
  A100: rgba(var(--primaryA100-parts), 1),
  A200: rgba(var(--primaryA200-parts), 1),
  A400: rgba(var(--primaryA400-parts), 1),
  A700: rgba(var(--primaryA700-parts), 1),
  contrast: (
    50: rgba(var(--primaryContrast50-parts), 1),
    100: rgba(var(--primaryContrast100-parts), 1),
    200: rgba(var(--primaryContrast200-parts), 1),
    300: rgba(var(--primaryContrast300-parts), 1),
    400: rgba(var(--primaryContrast400-parts), 1),
    500: rgba(var(--primaryContrast500-parts), 1),
    600: rgba(var(--primaryContrast600-parts), 1),
    700: rgba(var(--primaryContrast700-parts), 1),
    800: rgba(var(--primaryContrast800-parts), 1),
    900: rgba(var(--primaryContrast900-parts), 1),
    A100: rgba(var(--primaryContrastA100-parts), 1),
    A200: rgba(var(--primaryContrastA200-parts), 1),
    A400: rgba(var(--primaryContrastA400-parts), 1),
    A700: rgba(var(--primaryContrastA700-parts), 1),
  ),
);
$md-accents: (
  50: rgba(var(--accent50-parts), 1),
  100: rgba(var(--accent100-parts), 1),
  200: rgba(var(--accent200-parts), 1),
  300: rgba(var(--accent300-parts), 1),
  400: rgba(var(--accent400-parts), 1),
  500: rgba(var(--accent500-parts), 1),
  600: rgba(var(--accent600-parts), 1),
  700: rgba(var(--accent700-parts), 1),
  800: rgba(var(--accent800-parts), 1),
  900: rgba(var(--accent900-parts), 1),
  A100: rgba(var(--accentA100-parts), 1),
  A200: rgba(var(--accentA200-parts), 1),
  A400: rgba(var(--accentA400-parts), 1),
  A700: rgba(var(--accentA700-parts), 1),
  contrast: (
    50: rgba(var(--accentContrast50-parts), 1),
    100: rgba(var(--accentContrast100-parts), 1),
    200: rgba(var(--accentContrast200-parts), 1),
    300: rgba(var(--accentContrast300-parts), 1),
    400: rgba(var(--accentContrast400-parts), 1),
    500: rgba(var(--accentContrast500-parts), 1),
    600: rgba(var(--accentContrast600-parts), 1),
    700: rgba(var(--accentContrast700-parts), 1),
    800: rgba(var(--accentContrast800-parts), 1),
    900: rgba(var(--accentContrast900-parts), 1),
    A100: rgba(var(--accentContrastA100-parts), 1),
    A200: rgba(var(--accentContrastA200-parts), 1),
    A400: rgba(var(--accentContrastA400-parts), 1),
    A700: rgba(var(--accentContrastA700-parts), 1),
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rms-app-primary: mat-palette($md-ekhaa);
$rms-app-accent: mat-palette($md-accents, A200, A100, A400);

// The warn palette is optional (defaults to red).
$rms-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$rms-app-theme: mat-light-theme($rms-app-primary, $rms-app-accent, $rms-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($rms-app-theme);

@import "~css-star-rating/scss/star-rating";

html,
body {
  color: #444;
}

html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
span,
div,
section,
b,
strong,
small,
ul,
ol,
li,
button,
a,
table,
thead,
tbody,
tr,
td,
th {
  font-family: "Tajawal", "Quicksand", sans-serif;
}

/* // @TODO arabic */
.lang-ar body {
  font-family: "Tajawal", sans-serif;
}

body {
  margin: 0;
  background: var(--backgroundColor);
}

.mainWrapper {
  &--rtl {
    direction: rtl;
    text-align: right;
  }
}

.routerOutletContainer {
  position: relative;
  min-height: 400px;
}

img {
  max-width: 100%;
}

.serviceCard {
}

.department__section {
  border-bottom: 5px #444 solid;
}

.department {
  background: var(--backgroundColor);
  font-weight: normal;
  border-radius: 0 !important;
  line-height: 15px !important;
  white-space: normal !important;
  word-wrap: break-word;
  width: auto;
  height: 56px;
}

.department.active {
  color: #fff;
  background: #444;
  font-weight: bold;
}

.category__section {
  background: #444;
  color: #fff;
  margin-bottom: 30px;
  padding-left: 15px !important;
  padding-right: 15px !important;
}

.category {
  background: #444;
  font-weight: normal;
  border-radius: 0 !important;
  margin-bottom: 5px !important;
  line-height: 15px !important;
  white-space: normal !important;
  word-wrap: break-word;
  height: 40px;
}

.category.active {
  color: #fff;
  background: mat-color($rms-app-primary);
  font-weight: bold;
}
.mat-expansion-panel:not([class*="mat-elevation-z"]),
mat-expansion-panel.mat-expansion-panel.mat-expanded.mat-expansion-panel-spacing {
  box-shadow: 0 0;
  border: 1px rgba(0, 0, 0, 0.06) solid;
  background: #f7f7f7;
}

mat-checkbox .mat-checkbox-inner-container {
  margin-left: 8px;
}

.mat-form-field {
  text-align: right !important;
}

.inlineRowItem {
  margin: 15px 0;
}
.note {
  text-align: center;
  margin: 35px 0px 0px 0px;
  font-size: 17px;
  font-weight: 900;
}
.mat-chip-list--inlineBlock {
  display: inline-block;
}
.mat-menu-panel.notifications {
  height: 50vh !important;
  min-width: 420px !important;
  .mat-menu-content {
    height: 100%;
    overflow: hidden;
    padding: 0px;
  }
}
button:focus {
  outline-width: 0px;
}
a:hover {
  color: inherit;
  text-decoration: none;
}
